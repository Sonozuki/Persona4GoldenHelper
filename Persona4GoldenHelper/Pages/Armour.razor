@page "/armour"
@inject HttpClient Http;
@using ArmourModel = Persona4GoldenHelper.Models.Armour;

<div class="content-normal">
    <SearchBox @ref="SearchBox" />

    <h1>Armour</h1>
    @if (SearchBox != null && AllArmour != null)
    {
        @foreach (var gender in Enum.GetValues<Gender>())
        {
            <FilterableTable Header=@gender.ToString() TContent=ArmourModel Content=GetArmourByGender(gender) SearchBox=SearchBox IncludeTBodyTag=false ShowNoResultsText=false>
                <HeaderRow>
                    <th>Name</th>
                    <th class="column-very-slim text-align-centre">Defence</th>
                    <th class="column-very-slim text-align-centre">Evasion</th>
                    <th>Effect</th>
                    <th class="text-align-centre">Price</th>
                    <th>How to Obtain</th>
	    		</HeaderRow>
                <ContentRow>
                    <tbody class="alternate-colour">
                        @for (int i = 0; i < context.Obtained.Count; i++)
                        {
                            var obtain = context.Obtained[i];
                            <tr>
                                @if (i == 0)
                                {
                                    <td rowspan=@context.Obtained.Count>@context.Name</td>
                                    <td rowspan=@context.Obtained.Count class="text-align-centre">@context.Defence</td>
                                    <td rowspan=@context.Obtained.Count class="text-align-centre">@context.Evasion</td>
                                    <td rowspan=@context.Obtained.Count>@(context.Effect == "" ? "-" : context.Effect)</td>
                                }

                                <td class="text-secondary text-align-centre">@(obtain.Price == "" ? "-" : obtain.Price)</td>
                                <td>@obtain.Obtain</td>
                            </tr>
                        }
                    </tbody>
	    		</ContentRow>
	    	</FilterableTable>
        }
    }
</div>

@code {
    /*********
    ** Fields
    *********/
    /// <summary>A reference to the search box.</summary>
    private SearchBox _SearchBox;

    /// <summary>All the armour to display.</summary>
    private List<ArmourModel> AllArmour;


    /*********
    ** Accessors
    *********/
    /// <summary>A reference to the search box.</summary>
    public SearchBox SearchBox
    {
        get => _SearchBox;
        set
        {
            _SearchBox = value;
            StateHasChanged();
        }
    }


    /*********
    ** Protected Methods
    *********/
    /// <inheritdoc/>
    protected override async Task OnInitializedAsync() => AllArmour = await Http.GetFromJsonAsync<List<ArmourModel>>("data/armour.json");

    
    /*********
    ** Private Methods
    *********/
    /// <summary>Retrieves the armour for a specific gender.</summary>
    /// <param name="gender">The gender whose armour should be retrieved.</param>
    /// <returns>The armour for <paramref name="gender"/>.</returns>
    private List<ArmourModel> GetArmourByGender(Gender gender) =>
        AllArmour
            .Where(armour => armour.Gender == gender)
            .ToList();
}
