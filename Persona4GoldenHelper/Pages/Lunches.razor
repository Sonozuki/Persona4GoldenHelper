@page "/lunches"
@inject HttpClient Http;

<div class="content-very-narrow">
    <SearchBox @ref="SearchBox" />

    <h1>Lunches</h1>
    @if (SearchBox != null)
    {
        <FilterableTable TContent=Lunch Content=AllLunches SearchBox="SearchBox">
            <HeaderRow>
                <th class="column-slim text-align-centre">Name</th>
                <th class="column-slim text-align-centre">Method</th>
	    	</HeaderRow>
            <ContentRow>
                <tr class="alternate-colour">
                    <td class="text-align-centre">@context.Name</td>
                    <td class="text-align-centre">@context.Method</td>
                </tr>
	    	</ContentRow>
	    </FilterableTable>
    }
</div>

@code {
    /*********
    ** Fields
    *********/
    /// <summary>A reference to the search box.</summary>
    private SearchBox _SearchBox;

    /// <summary>All the lunches to display.</summary>
    private List<Lunch> AllLunches;


    /*********
    ** Accessors
    *********/
    /// <summary>A reference to the search box.</summary>
    public SearchBox SearchBox
    {
        get => _SearchBox;
        set
        {
            _SearchBox = value;
            StateHasChanged();
        }
    }


    /*********
    ** Protected Methods
    *********/
    /// <inheritdoc/>
    protected override async Task OnInitializedAsync() => AllLunches = await Http.GetFromJsonAsync<List<Lunch>>("data/lunches.json");
}
