@page "/books"
@inject HttpClient Http;

<div class="content-normal">
    <SearchBox @ref="SearchBox" />

    <h1>Books</h1>
    @if (SearchBox != null)
    {
        <FilterableTable TContent=Book Content=AllBooks SearchBox=SearchBox>
            <HeaderRow>
                <th class="text-align-centre">Available</th>
                <th class="column-wide">Title</th>
                <th>How to Obtain</th>
                <th class="column-wider">Effect</th>
            </HeaderRow>
            <ContentRow>
                <tr class="alternate-colour">
                    <td class="text-secondary text-align-centre">@context.DateAvailable</td>
                    <td>@context.Title</td>
                    <td class="white-space-pre-line">@context.Requirement</td>
                    <td>@context.Effect</td>
                </tr>
            </ContentRow>
        </FilterableTable>

        <h1>Book Order</h1>
        <FilterableTable TContent=FilterableString Content=BookOrder SearchBox=SearchBox Class="table-narrow">
            <ContentRow>
                <tr class="alternate-colour">
                    <td class="text-align-centre text-primary">@context.Value</td>
                </tr>
            </ContentRow>
        </FilterableTable>
    }
</div>

@code {
    /*********
    ** Fields
    *********/
    /// <summary>A reference to the search box.</summary>
    private SearchBox _SearchBox;

    /// <summary>All the books to display.</summary>
    private List<Book> AllBooks;

    /// <summary>The order of the books in the inventory.</summary>
    private List<FilterableString> BookOrder;

    
    /*********
    ** Accessors
    *********/
    /// <summary>A reference to the search box.</summary>
    public SearchBox SearchBox
    {
        get => _SearchBox;
        set
        {
            _SearchBox = value;
            StateHasChanged();
        }
    }


    /*********
    ** Protected Methods
	*********/
    /// <inheritdoc/>
    protected override async Task OnInitializedAsync()
    {
        AllBooks= await Http.GetFromJsonAsync<List<Book>>("data/books.json");
        BookOrder = (await Http.GetFromJsonAsync<List<string>>("data/book-order.json"))
            .Select(bookName => new FilterableString(bookName))
            .ToList();
    }
}
