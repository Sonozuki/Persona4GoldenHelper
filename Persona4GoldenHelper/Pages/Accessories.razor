@page "/accessories"
@inject HttpClient Http;

<div class="content-normal">
    <SearchBox @ref="SearchBox" />

    <h1>Accessories</h1>
    @if (SearchBox != null)
    {
        <FilterableTable TContent=Accessory Content=AllAccessories SearchBox=SearchBox IncludeTBodyTag=false>
            <HeaderRow>
                <th>Name</th>
                <th>Effect</th>
                <th class="text-align-centre">Price</th>
                <th>How to Obtain</th>
            </HeaderRow>
            <ContentRow>
                <tbody class="alternate-colour">
                    @for (int i = 0; i < context.Obtained.Count; i++)
                    {
                        var obtain = context.Obtained[i];
                        <tr>
                            @if (i == 0)
                            {
                                <td rowspan=@context.Obtained.Count>@context.Name</td>
                                <td rowspan=@context.Obtained.Count>@(context.Effect == "" ? "-" : context.Effect)</td>
                            }

                            <td class="text-secondary text-align-centre">@(obtain.Price == "" ? "-" : obtain.Price)</td>
                            <td>@obtain.Obtain</td>
                        </tr>
                    }
                </tbody>
            </ContentRow>
        </FilterableTable>
    }
</div>

@code {
    /*********
    ** Fields
    *********/
    /// <summary>A reference to the search box.</summary>
    private SearchBox _SearchBox;

    /// <summary>All the accessories to display.</summary>
    private List<Accessory> AllAccessories;

    
    /*********
    ** Accessors
    *********/
    /// <summary>A reference to the search box.</summary>
    public SearchBox SearchBox
    {
        get => _SearchBox;
        set
        {
            _SearchBox = value;
            StateHasChanged();
        }
    }


    /*********
    ** Protected Methods
    *********/
    /// <inheritdoc/>
    protected override async Task OnInitializedAsync() => AllAccessories = await Http.GetFromJsonAsync<List<Accessory>>("data/accessories.json");
}
