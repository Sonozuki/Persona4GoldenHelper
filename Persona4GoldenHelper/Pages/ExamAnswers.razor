@page "/examanswers"
@inject HttpClient Http;

<div class="content-normal">
    <SearchBox @ref="SearchBox" />

    <h1>Exam Answers</h1>
    @if (SearchBox != null && AllExamAnswers != null)
    {
        @foreach (var month in Enum.GetValues<Month>())
        {
            <h2>@month</h2>
            <FilterableTable TContent=ExamAnswer Content=GetExamAnswersByMonth(month) SearchBox="SearchBox">
                <HeaderRow>
                    <th class="text-align-centre">Date</th>
                    <th class="column-very-wide">Question</th>
                    <th class="column-wider">Answer</th>
	    		</HeaderRow>
                <ContentRow>
                    <tr class="alternate-colour">
                        <td class="text-secondary text-align-centre">@context.DateAsked</td>
                        <td class="white-space-pre-line">@context.QuestionAsked</td>
                        <td>@context.QuestionAnswer</td>
                    </tr>
	    		</ContentRow>
	    	</FilterableTable>
        }
    }
</div>

@code {
    /*********
    ** Fields
    *********/
    /// <summary>A reference to the search box.</summary>
    private SearchBox _SearchBox;

    /// <summary>All the exam answers to display.</summary>
    private List<ExamAnswer> AllExamAnswers;

    
    /*********
    ** Accessors
    *********/
    /// <summary>A reference to the search box.</summary>
    public SearchBox SearchBox
    {
        get => _SearchBox;
        set
        {
            _SearchBox = value;
            StateHasChanged();
        }
    }


    /*********
    ** Protected Methods
    *********/
    /// <inheritdoc/>
    protected override async Task OnInitializedAsync() => AllExamAnswers = await Http.GetFromJsonAsync<List<ExamAnswer>>("data/exam-answers.json");

    
    /*********
    ** Private Methods
    *********/
    /// <summary>Retrieves the exam answers for a specific month.</summary>
    /// <param name="month">The month whose exam answers should be retrieved.</param>
    /// <returns>The exam answers for <paramref name="month"/>.</returns>
    private List<ExamAnswer> GetExamAnswersByMonth(Month month) =>
        AllExamAnswers
            .Where(examAnswer => examAnswer.Month == month)
            .ToList();
}
