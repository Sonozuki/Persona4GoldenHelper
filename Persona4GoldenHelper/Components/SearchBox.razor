<div class="searchbox-container">
    <input class="text-align-centre searchbox" type="text" placeholder="Search..." spellcheck="false"
        @bind="Value" @bind:event="oninput" @onkeyup="() => ValueChanged?.Invoke()"/>
</div>

@code {
    /*********
    ** Events
    *********/
    /// <summary>Invoked when the value changes.</summary>
    public event Action ValueChanged;


    /*********
    ** Accessories
    *********/
    /// <summary>The value entering in the search box.</summary>
    public string Value { get; set; }


    /*********
    ** Public Methods
    *********/
    /// <summary>Determines whether an object is visible with the current search result.</summary>
    /// <typeparam name="T">The type of the object to check.</typeparam>
    /// <param name="object">The object to check to see if it should be shown.</param>
    /// <returns><see langword="true"/> if the object should be shown; otherwise, <see langword="false"/>.</returns>
    public bool IsObjectVisible<T>(T @object)
        where T : FilterableModelBase
    {
        if (string.IsNullOrEmpty(Value))
            return true;

        return @object.DoesModelPassFilter(Value);
    }
}
